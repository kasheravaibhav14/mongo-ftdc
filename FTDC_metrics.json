{
    "to_monitor_p": [
        "serverStatus.uptime",
        "local.oplog.rs.stats.count",
        "serverStatus.connections.current",
        "serverStatus.flowControl.enabled",
        "serverStatus.flowControl.isLagged",
        "serverStatus.flowControl.locksPerKiloOp",
        "serverStatus.globalLock.activeClient.readers",
        "serverStatus.globalLock.activeClient.writers",
        "serverStatus.globalLock.currentQueue.readers",
        "serverStatus.globalLock.currentQueue.writers",
        "serverStatus.logicalSessionRecordCache.activeSessionsCount",
        "serverStatus.logicalSessionRecordCache.lastSessionsCollectionJobDurationMillis",
        "serverStatus.logicalSessionRecordCache.lastTransactionReaperJobDurationMillis",
        "serverStatus.logicalSessionRecordCache.sessionCatalogSize",
        "serverStatus.mem.resident",
        "serverStatus.mem.virtual",
        "serverStatus.metrics.cursor.open.noTimeout",
        "serverStatus.metrics.cursor.open.pinned",
        "serverStatus.metrics.cursor.open.total",
        "serverStatus.metrics.cursor.timedOut",
        "serverStatus.metrics.repl.executor.pool.inProgressCount",
        "serverStatus.network.serviceExecutorTaskStats.threadsRunning",
        "serverStatus.start",
        "serverStatus.tcmalloc.generic.current_allocated_bytes",
        "serverStatus.tcmalloc.generic.heap_size",
        "serverStatus.tcmalloc.tcmalloc.central_cache_free_bytes",
        "serverStatus.tcmalloc.tcmalloc.current_total_thread_cache_bytes",
        "serverStatus.tcmalloc.tcmalloc.max_total_thread_cache_bytes",
        "serverStatus.tcmalloc.tcmalloc.pageheap_free_bytes",
        "serverStatus.tcmalloc.tcmalloc.pageheap_unmapped_bytes",
        "serverStatus.tcmalloc.tcmalloc.release_rate",
        "serverStatus.tcmalloc.tcmalloc.thread_cache_free_bytes",
        "serverStatus.tcmalloc.tcmalloc.total_free_bytes",
        "serverStatus.tcmalloc.tcmalloc.transfer_cache_free_bytes",
        "serverStatus.transactions.currentActive",
        "serverStatus.transactions.currentInactive",
        "serverStatus.transactions.currentOpen",
        "serverStatus.transactions.currentPrepared",
        "serverStatus.wiredTiger.async.current work queue length",
        "serverStatus.wiredTiger.async.maximum work queue length",
        "serverStatus.wiredTiger.async.number of flush calls",
        "serverStatus.wiredTiger.cache.bytes",
        "serverStatus.wiredTiger.cache.bytes allocated for updates",
        "serverStatus.wiredTiger.cache.bytes belonging to page images in the cache",
        "serverStatus.wiredTiger.cache.bytes currently in the cache",
        "serverStatus.wiredTiger.cache.cache overflow score",
        "serverStatus.wiredTiger.cache.eviction empty score",
        "serverStatus.wiredTiger.cache.eviction state",
        "serverStatus.wiredTiger.cache.eviction worker thread active",
        "serverStatus.wiredTiger.cache.files with active eviction walks",
        "serverStatus.wiredTiger.cache.maximum bytes configured",
        "serverStatus.wiredTiger.cache.maximum page size at eviction",
        "serverStatus.wiredTiger.cache.percentage overhead",
        "serverStatus.wiredTiger.cache.tracked dirty bytes in the cache",
        "serverStatus.wiredTiger.concurrentTransactions.read.available",
        "serverStatus.wiredTiger.concurrentTransactions.read.out",
        "serverStatus.wiredTiger.concurrentTransactions.write.available",
        "serverStatus.wiredTiger.concurrentTransactions.write.out",
        "serverStatus.wiredTiger.connection.files currently open",
        "serverStatus.wiredTiger.connection.files currently open",
        "serverStatus.wiredTiger.cursor.cached cursor count",
        "serverStatus.wiredTiger.cursor.open cursor count",
        "serverStatus.wiredTiger.thread-state",
        "serverStatus.wiredTiger.transaction.transaction checkpoint currently running",
        "serverStatus.wiredTiger.transaction.transaction checkpoint max time (msecs)",
        "serverStatus.wiredTiger.transaction.transaction checkpoint min time (msecs)",
        "systemMetrics.cpu.num_cpus",
        "systemMetrics.cpu.procs_blocked",
        "systemMetrics.cpu.procs_running",
        "systemMetrics.memory.Buffers_kb",
        "systemMetrics.memory.Cached_kb",
        "systemMetrics.memory.Dirty_kb",
        "systemMetrics.memory.MemAvailable_kb",
        "systemMetrics.memory.MemFree_kb",
        "systemMetrics.memory.MemTotal_kb",
        "systemMetrics.memory.SwapCached_kb",
        "systemMetrics.memory.SwapFree_kb",
        "systemMetrics.memory.SwapTotal_kb"
    ],
    "to_monitor_c": [
        "local.oplog.rs.stats.indexSizes",
        "local.oplog.rs.stats.totalIndexSize",
        "serverStatus.connections.totalCreated",
        "serverStatus.wiredTiger.connection.memory allocations",
        "serverStatus.wiredTiger.connection.memory frees",
        "serverStatus.wiredTiger.connection.memory re-allocations",
        "systemMetrics.cpu.idle_ms",
        "systemMetrics.cpu.iowait_ms",
        "systemMetrics.cpu.processes",
        "serverStatus.extra_info.maximum_resident_set_kb",
        "serverStatus.extra_info.page_faults",
        "serverStatus.extra_info.page_reclaims",
        "serverStatus.extra_info.system_time_us",
        "serverStatus.extra_info.user_time_us",
        "serverStatus.flowControl.isLaggedCount",
        "serverStatus.flowControl.isLaggedTimeMicros",
        "serverStatus.flowControl.locksPerOp",
        "serverStatus.flowControl.timeAcquiringMicros",
        "serverStatus.logicalSessionRecordCache.sessionsCollectionJobCount",
        "serverStatus.metrics.aggStageCounters",
        "serverStatus.metrics.commands.aggregate.total",
        "serverStatus.metrics.commands.count.total",
        "serverStatus.metrics.commands.delete.total",
        "serverStatus.metrics.commands.findAndModify.total",
        "serverStatus.metrics.commands.find.total",
        "serverStatus.metrics.commands.getMore.total",
        "serverStatus.metrics.commands.reIndex.total",
        "serverStatus.metrics.commands.update.total",
        "serverStatus.metrics.document.deleted",
        "serverStatus.metrics.document.inserted",
        "serverStatus.metrics.document.returned",
        "serverStatus.metrics.document.updated",
        "serverStatus.metrics.operation.scanAndOrder",
        "serverStatus.metrics.operation.writeConflicts",
        "serverStatus.metrics.queryExecutor.scanned",
        "serverStatus.metrics.queryExecutor.scannedObjects",
        "serverStatus.metrics.ttl.deletedDocuments",
        "serverStatus.metrics.ttl.passes",
        "serverStatus.network.bytesIn",
        "serverStatus.network.bytesOut",
        "serverStatus.network.numRequests",
        "serverStatus.network.numSlowDNSOperations",
        "serverStatus.network.numSlowDNSOperations",
        "serverStatus.network.numSlowSSLOperations",
        "serverStatus.network.numSlowSSLOperations",
        "serverStatus.network.tcpFastOpen.accepted",
        "serverStatus.opLatencies.commands.ops",
        "serverStatus.opLatencies.reads.ops",
        "serverStatus.opLatencies.transactions.ops",
        "serverStatus.opLatencies.writes.ops",
        "serverStatus.opcounters.command",
        "serverStatus.opcounters.delete",
        "serverStatus.opcounters.getmore",
        "serverStatus.opcounters.insert",
        "serverStatus.opcounters.query",
        "serverStatus.opcounters.update",
        "serverStatus.opcountersRepl.command",
        "serverStatus.opcountersRepl.delete",
        "serverStatus.opcountersRepl.getmore",
        "serverStatus.opcountersRepl.insert",
        "serverStatus.opcountersRepl.query",
        "serverStatus.opcountersRepl.update",
        "serverStatus.queryExecutor.collectionScans.nonTailable",
        "serverStatus.queryExecutor.collectionScans.total",
        "serverStatus.storageEngine.dropPendingIdents",
        "serverStatus.tcmalloc.tcmalloc.pageheap_commit_count",
        "serverStatus.tcmalloc.tcmalloc.pageheap_decommit_count",
        "serverStatus.tcmalloc.tcmalloc.pageheap_reserve_count",
        "serverStatus.tcmalloc.tcmalloc.pageheap_total_commit_bytes",
        "serverStatus.tcmalloc.tcmalloc.pageheap_total_decommit_bytes",
        "serverStatus.tcmalloc.tcmalloc.pageheap_total_reserve_bytes",
        "serverStatus.tcmalloc.tcmalloc.spinlock_total_delay_ns",
        "serverStatus.transactions.retriedCommandsCount",
        "serverStatus.transactions.retriedStatementsCount",
        "serverStatus.transactions.totalAborted",
        "serverStatus.transactions.totalCommitted",
        "serverStatus.transactions.totalPrepared",
        "serverStatus.transactions.totalPreparedThenAborted",
        "serverStatus.transactions.totalPreparedThenCommitted",
        "serverStatus.transactions.totalStarted",
        "serverStatus.wiredTiger.cache.application threads page read from disk to cache count",
        "serverStatus.wiredTiger.cache.application threads page read from disk to cache time (usecs)",
        "serverStatus.wiredTiger.cache.application threads page write from cache to disk count",
        "serverStatus.wiredTiger.cache.application threads page write from cache to disk time (usecs)",
        "serverStatus.wiredTiger.cache.bytes dirty in the cache cumulative",
        "serverStatus.wiredTiger.cache.bytes read into cache",
        "serverStatus.wiredTiger.cache.bytes written from cache",
        "serverStatus.wiredTiger.cache.cache overflow table entries",
        "serverStatus.wiredTiger.cache.eviction",
        "serverStatus.wiredTiger.cache.eviction worker thread created",
        "serverStatus.wiredTiger.cache.eviction worker thread evicting pages",
        "serverStatus.wiredTiger.cache.forced eviction - pages evicted that were clean count",
        "serverStatus.wiredTiger.cache.forced eviction - pages evicted that were clean time (usecs)",
        "serverStatus.wiredTiger.cache.forced eviction - pages evicted that were dirty count",
        "serverStatus.wiredTiger.cache.forced eviction - pages evicted that were dirty time (usecs)",
        "serverStatus.wiredTiger.cache.forced eviction - pages selected unable to be evicted count",
        "serverStatus.wiredTiger.cache.modified pages evicted",
        "serverStatus.wiredTiger.cache.modified pages evicted by application threads",
        "serverStatus.wiredTiger.cache.pages evicted by application threads",
        "serverStatus.wiredTiger.cache.pages queued for urgent eviction",
        "serverStatus.wiredTiger.cache.pages queued for urgent eviction during walk",
        "serverStatus.wiredTiger.cache.unmodified pages evicted",
        "serverStatus.wiredTiger.capacity.background fsync time (msecs)",
        "serverStatus.wiredTiger.capacity.bytes read",
        "serverStatus.wiredTiger.capacity.bytes written for checkpoint",
        "serverStatus.wiredTiger.capacity.bytes written for eviction",
        "serverStatus.wiredTiger.capacity.time waiting during checkpoint (usecs)",
        "serverStatus.wiredTiger.capacity.time waiting during eviction (usecs)",
        "serverStatus.wiredTiger.capacity.time waiting during logging (usecs)",
        "serverStatus.wiredTiger.connection.pthread mutex condition wait calls",
        "serverStatus.wiredTiger.connection.pthread mutex shared lock read-lock calls",
        "serverStatus.wiredTiger.connection.pthread mutex shared lock write-lock calls",
        "serverStatus.wiredTiger.connection.total",
        "serverStatus.wiredTiger.connection.total fsync I/Os",
        "serverStatus.wiredTiger.connection.total read I/Os",
        "serverStatus.wiredTiger.connection.total write I/Os",
        "serverStatus.wiredTiger.lock.table lock application thread time waiting for the table lock (usecs)",
        "serverStatus.wiredTiger.lock.table read lock acquisitions",
        "serverStatus.wiredTiger.lock.table write lock acquisitions",
        "serverStatus.wiredTiger.thread-yield.application thread time evicting (usecs)",
        "serverStatus.wiredTiger.thread-yield.application thread time waiting for cache (usecs)",
        "serverStatus.wiredTiger.thread-yield.page acquire eviction blocked",
        "serverStatus.wiredTiger.thread-yield.page acquire time sleeping (usecs)",
        "serverStatus.wiredTiger.transaction.Number of prepared updates",
        "serverStatus.wiredTiger.transaction.Number of prepared updates committed",
        "serverStatus.wiredTiger.transaction.Number of prepared updates rolled back",
        "serverStatus.wiredTiger.transaction.prepared transactions currently active",
        "serverStatus.wiredTiger.transaction.transaction checkpoint total time (msecs)",
        "serverStatus.wiredTiger.transaction.transaction checkpoints",
        "serverStatus.wiredTiger.transaction.transactions committed",
        "serverStatus.wiredTiger.transaction.transactions rolled back",
        "serverStatus.wiredTiger.transaction.update conflicts"
    ],
    "locks": {
        "type": [
            "ParallelBatchWriterMode",
            "ReplicationStateTransition",
            "Global",
            "Database",
            "Collection",
            "Mutex",
            "oplog"
        ],
        "mode": [
            "r",
            "w",
            "R",
            "W"
        ],
        "ops": [
            "acquireCount",
            "acquireWaitCount",
            "timeAcquiringMicros",
            "deadlockCount"
        ]
    },
    "to_exclude": [
        "systemMetrics.cpu.nice_ms",
        "systemMetrics.cpu.system_ms",
        "systemMetrics.cpu.user_ms",
        "serverStatus.wiredTiger.cache.bytes belonging to the history store table in the cache",
        "serverStatus.wiredTiger.transaction.transaction failures due to history store",
        "serverStatus.wiredTiger.transaction.rollback to stable updates removed from history store",
        "extra_info.involuntary_context_switches",
        "local.oplog.rs.stats.avgObjSize",
        "local.oplog.rs.stats.capped",
        "local.oplog.rs.stats.end",
        "local.oplog.rs.stats.freeStorageSize",
        "local.oplog.rs.stats.max",
        "local.oplog.rs.stats.maxSize",
        "local.oplog.rs.stats.ok",
        "local.oplog.rs.stats.scaleFactor",
        "local.oplog.rs.stats.size",
        "local.oplog.rs.stats.sleepCount",
        "local.oplog.rs.stats.sleepMS",
        "local.oplog.rs.stats.start",
        "local.oplog.rs.stats.storageSize",
        "local.oplog.rs.stats.totalSize",
        "local.oplog.rs.stats.wiredTiger.*",
        "replSetGetStatus.*",
        "serverStatus.transactions.transactionsCollectionWriteCount",
        "serverStatus.asserts.msg",
        "serverStatus.asserts.regular",
        "serverStatus.asserts.user",
        "serverStatus.asserts.warning",
        "serverStatus.connections.active",
        "serverStatus.connections.available",
        "serverStatus.connections.awaitingTopologyChanges",
        "serverStatus.connections.exhaustHello",
        "serverStatus.connections.exhaustIsMaster",
        "serverStatus.wiredTiger.cache.history store score",
        "serverStatus.defaultRWConcern",
        "serverStatus.electionMetrics",
        "serverStatus.extra_info.voluntary_context_switches",
        "serverStatus.extra_info.input_blocks",
        "serverStatus.extra_info.output_blocks",
        "serverStatus.flowControl.sustainerRate",
        "serverStatus.flowControl.targetRateLimit",
        "serverStatus.globalLock.activeClient.total",
        "serverStatus.globalLock.currentQueue.total",
        "serverStatus.globalLock.totalTime",
        "serverStatus.hedgingMetrics.*",
        "serverStatus.indexBulkBuilder.count",
        "serverStatus.indexBulkBuilder.filesClosedForExternalSort",
        "serverStatus.indexBulkBuilder.filesOpenedForExternalSort",
        "serverStatus.indexBulkBuilder.resumed",
        "serverStatus.latchAnalysis.*",
        "serverStatus.logicalSessionRecordCache.lastSessionsCollectionJobCursorsClosed",
        "serverStatus.logicalSessionRecordCache.lastSessionsCollectionJobEntriesEnded",
        "serverStatus.logicalSessionRecordCache.lastSessionsCollectionJobEntriesRefreshed",
        "serverStatus.logicalSessionRecordCache.lastSessionsCollectionJobTimestamp",
        "serverStatus.logicalSessionRecordCache.lastTransactionReaperJobEntriesCleanedUp",
        "serverStatus.logicalSessionRecordCache.lastTransactionReaperJobTimestamp",
        "serverStatus.logicalSessionRecordCache.transactionReaperJobCount",
        "serverStatus.mem.bits",
        "serverStatus.mem.supported",
        "serverStatus.metrics.operatorCounters.*",
        "serverStatus.metrics.repl.apply.attemptsToBecomeSecondary",
        "serverStatus.metrics.repl.apply.batchSize",
        "serverStatus.metrics.repl.apply.batches.num",
        "serverStatus.metrics.repl.apply.batches.totalMillis",
        "serverStatus.metrics.repl.apply.ops",
        "serverStatus.metrics.repl.buffer.count",
        "serverStatus.metrics.repl.buffer.maxSizeBytes",
        "serverStatus.metrics.repl.buffer.sizeBytes",
        "serverStatus.metrics.repl.executor.queues.networkInProgress",
        "serverStatus.metrics.repl.executor.queues.sleepers",
        "serverStatus.metrics.repl.executor.shuttingDown",
        "serverStatus.metrics.repl.executor.unsignaledEvents",
        "serverStatus.metrics.repl.initialSync.completed",
        "serverStatus.metrics.repl.initialSync.failedAttempts",
        "serverStatus.metrics.repl.initialSync.failure",
        "serverStatus.mirroredReads.*",
        "serverStatus.network.compression.*",
        "serverStatus.network.physicalBytesIn",
        "serverStatus.network.physicalBytesOut",
        "serverStatus.network.tcpFastOpen.clientSupported",
        "serverStatus.network.tcpFastOpen.kernelSetting",
        "serverStatus.network.tcpFastOpen.serverSupported",
        "serverStatus.opLatencies.commands.latency",
        "serverStatus.opLatencies.reads.latency",
        "serverStatus.opLatencies.transactions.latency",
        "serverStatus.opLatencies.writes.latency",
        "serverStatus.opReadConcernCounters.*",
        "serverStatus.oplogTruncation*",
        "serverStatus.pid",
        "serverStatus.repl.*",
        "serverStatus.scramCache.*",
        "serverStatus.security.authentication.mechanisms*",
        "serverStatus.storageEngine.* except dropPendingIdents",
        "serverStatus.tcmalloc.tcmalloc.aggressive_memory_decommit",
        "serverStatus.tcmalloc.tcmalloc.pageheap_committed_bytes",
        "serverStatus.tcmalloc.tcmalloc.pageheap_scavenge_count",
        "serverStatus.trafficRecording.running",
        "serverStatus.transportSecurity.*",
        "serverStatus.twoPhaseCommitCoordinator",
        "serverStatus.uptimeEstimate",
        "serverStatus.uptimeMillis",
        "serverStatus.wiredTiger.block-manager.blocks read",
        "serverStatus.wiredTiger.block-manager.blocks written",
        "serverStatus.wiredTiger.block-manager.bytes read",
        "serverStatus.wiredTiger.block-manager.bytes written",
        "serverStatus.wiredTiger.block-manager.bytes written for checkpoint",
        "serverStatus.wiredTiger.block-manager.blocks pre-loaded",
        "serverStatus.wiredTiger.block-manager.bytes read via memory map API",
        "serverStatus.wiredTiger.block-manager.bytes read via system call API",
        "serverStatus.wiredTiger.block-manager.bytes written via memory map API",
        "serverStatus.wiredTiger.block-manager.bytes written via system call API",
        "serverStatus.wiredTiger.block-manager.mapped blocks read",
        "serverStatus.wiredTiger.block-manager.mapped bytes read",
        "serverStatus.wiredTiger.block-manager.number of times the file was remapped because it changed size via fallocate or truncate",
        "serverStatus.wiredTiger.block-manager.number of times the region was remapped via write",
        "serverStatus.wiredTiger.cache.bytes not belonging to page images in the cache",
        "serverStatus.wiredTiger.cache.checkpoint blocked page eviction",
        "serverStatus.wiredTiger.cache.checkpoint of history store file blocked non-history store page eviction",
        "serverStatus.wiredTiger.cache.eviction walks *",
        "serverStatus.wiredTiger.cache.eviction worker thread removed",
        "serverStatus.wiredTiger.cache.eviction worker thread stable number",
        "serverStatus.wiredTiger.cache.files with new eviction walks started",
        "serverStatus.wiredTiger.cache.forced eviction - pages selected unable to be evicted time",
        "serverStatus.wiredTiger.cache.history*",
        "serverStatus.wiredTiger.cache.in-memory page passed criteria to be split",
        "serverStatus.wiredTiger.cache.in-memory page splits",
        "serverStatus.wiredTiger.capacity.background fsync file handles considered",
        "serverStatus.wiredTiger.capacity.background fsync file handles synced",
        "serverStatus.wiredTiger.capacity.bytes read",
        "serverStatus.wiredTiger.capacity.bytes written for log",
        "serverStatus.wiredTiger.capacity.bytes written total",
        "serverStatus.wiredTiger.capacity.threshold to call fsync",
        "serverStatus.wiredTiger.capacity.time waiting due to total capacity (usecs)",
        "serverStatus.wiredTiger.capacity.time waiting during read (usecs)",
        "serverStatus.wiredTiger.checkpoint-cleanup.pages added for eviction",
        "serverStatus.wiredTiger.checkpoint-cleanup.pages removed",
        "serverStatus.wiredTiger.checkpoint-cleanup.pages skipped during tree walk",
        "serverStatus.wiredTiger.checkpoint-cleanup.pages visited",
        "serverStatus.wiredTiger.connection.auto adjusting condition resets",
        "serverStatus.wiredTiger.connection.auto adjusting condition wait calls",
        "serverStatus.wiredTiger.connection.auto adjusting condition wait raced to update timeout and skipped updating",
        "serverStatus.wiredTiger.connection.hash bucket array size for data handles",
        "serverStatus.wiredTiger.connection.hash bucket array size general",
        "serverStatus.wiredTiger.cursor.Total number of entries skipped by cursor next calls",
        "serverStatus.wiredTiger.cursor.Total number of entries skipped by cursor prev calls",
        "serverStatus.wiredTiger.cursor.Total number of entries skipped to position the history store cursor",
        "serverStatus.wiredTiger.cursor.Total number of times a search near has exited due to prefix config",
        "serverStatus.wiredTiger.cursor.cursor bulk loaded cursor insert calls",
        "serverStatus.wiredTiger.cursor.cursor close calls that result in cache",
        "serverStatus.wiredTiger.cursor.cursor create calls",
        "serverStatus.wiredTiger.cursor.cursor insert calls",
        "serverStatus.wiredTiger.cursor.cursor insert key and value bytes",
        "serverStatus.wiredTiger.cursor.cursor modify calls",
        "serverStatus.wiredTiger.cursor.cursor modify key and value bytes affected",
        "serverStatus.wiredTiger.cursor.cursor modify value bytes modified",
        "serverStatus.wiredTiger.cursor.cursor next calls",
        "serverStatus.wiredTiger.cursor.cursor next calls that skip due to a globally visible history store tombstone",
        "serverStatus.wiredTiger.cursor.cursor next calls that skip greater than or equal to 100 entries",
        "serverStatus.wiredTiger.cursor.cursor next calls that skip less than 100 entries",
        "serverStatus.wiredTiger.cursor.cursor operation restarted",
        "serverStatus.wiredTiger.cursor.cursor prev calls",
        "serverStatus.wiredTiger.cursor.cursor prev calls that skip due to a globally visible history store tombstone",
        "serverStatus.wiredTiger.cursor.cursor prev calls that skip greater than or equal to 100 entries",
        "serverStatus.wiredTiger.cursor.cursor prev calls that skip less than 100 entries",
        "serverStatus.wiredTiger.cursor.cursor remove calls",
        "serverStatus.wiredTiger.cursor.cursor remove key bytes removed",
        "serverStatus.wiredTiger.cursor.cursor reserve calls",
        "serverStatus.wiredTiger.cursor.cursor reset calls",
        "serverStatus.wiredTiger.cursor.cursor search calls",
        "serverStatus.wiredTiger.cursor.cursor search history store calls",
        "serverStatus.wiredTiger.cursor.cursor search near calls",
        "serverStatus.wiredTiger.cursor.cursor sweep buckets",
        "serverStatus.wiredTiger.cursor.cursor sweep cursors closed",
        "serverStatus.wiredTiger.cursor.cursor sweep cursors examined",
        "serverStatus.wiredTiger.cursor.cursor sweeps",
        "serverStatus.wiredTiger.cursor.cursor truncate calls",
        "serverStatus.wiredTiger.cursor.cursor update calls",
        "serverStatus.wiredTiger.cursor.cursor update key and value bytes",
        "serverStatus.wiredTiger.cursor.cursor update value size change",
        "serverStatus.wiredTiger.cursor.cursors reused from cache",
        "serverStatus.wiredTiger.data-handle.*",
        "serverStatus.wiredTiger.lock.metadata lock acquisitions",
        "serverStatus.wiredTiger.lock.metadata lock application thread wait time (usecs)",
        "serverStatus.wiredTiger.lock.metadata lock internal thread wait time (usecs)",
        "serverStatus.wiredTiger.lock.read timestamp queue lock application thread time waiting (usecs)",
        "serverStatus.wiredTiger.lock.read timestamp queue lock internal thread time waiting (usecs)",
        "serverStatus.wiredTiger.lock.read timestamp queue read lock acquisitions",
        "serverStatus.wiredTiger.lock.read timestamp queue write lock acquisitions",
        "serverStatus.wiredTiger.lock.schema lock acquisitions",
        "serverStatus.wiredTiger.lock.schema lock application thread wait time (usecs)",
        "serverStatus.wiredTiger.lock.schema lock internal thread wait time (usecs)",
        "serverStatus.wiredTiger.lock.table lock internal thread time waiting for the table lock (usecs)",
        "serverStatus.wiredTiger.lock.txn global lock application thread time waiting (usecs)",
        "serverStatus.wiredTiger.lock.txn global lock internal thread time waiting (usecs)",
        "serverStatus.wiredTiger.lock.txn global read lock acquisitions",
        "serverStatus.wiredTiger.lock.txn global write lock acquisitions",
        "serverStatus.wiredTiger.log.*",
        "serverStatus.wiredTiger.oplog.visibility*",
        "serverStatus.wiredTiger.reconciliation.*",
        "serverStatus.wiredTiger.session.attempts to remove a local object and the object is in use",
        "serverStatus.wiredTiger.session.flush_tier operation calls",
        "serverStatus.wiredTiger.session.local objects removed",
        "serverStatus.wiredTiger.session.open session count",
        "serverStatus.wiredTiger.session.session query timestamp calls",
        "serverStatus.wiredTiger.session.table alter failed calls",
        "serverStatus.wiredTiger.session.table alter successful calls",
        "serverStatus.wiredTiger.session.table alter triggering checkpoint calls",
        "serverStatus.wiredTiger.session.table alter unchanged and skipped",
        "serverStatus.wiredTiger.session.table compact failed calls",
        "serverStatus.wiredTiger.session.table compact failed calls due to cache pressure",
        "serverStatus.wiredTiger.session.table compact running",
        "serverStatus.wiredTiger.session.table compact skipped as process would not reduce file size",
        "serverStatus.wiredTiger.session.table compact successful calls",
        "serverStatus.wiredTiger.session.table compact timeout",
        "serverStatus.wiredTiger.session.table create failed calls",
        "serverStatus.wiredTiger.session.table create successful calls",
        "serverStatus.wiredTiger.session.table drop failed calls",
        "serverStatus.wiredTiger.session.table drop successful calls",
        "serverStatus.wiredTiger.session.table rename failed calls",
        "serverStatus.wiredTiger.session.table rename successful calls",
        "serverStatus.wiredTiger.session.table salvage failed calls",
        "serverStatus.wiredTiger.session.table salvage successful calls",
        "serverStatus.wiredTiger.session.table truncate failed calls",
        "serverStatus.wiredTiger.session.table truncate successful calls",
        "serverStatus.wiredTiger.session.table verify failed calls",
        "serverStatus.wiredTiger.session.table verify successful calls",
        "serverStatus.wiredTiger.session.tiered operations dequeued and processed",
        "serverStatus.wiredTiger.session.tiered operations scheduled",
        "serverStatus.wiredTiger.session.tiered storage local retention time (secs)",
        "serverStatus.wiredTiger.session.tiered storage object size",
        "serverStatus.wiredTiger.snapsot-window-settings.*",
        "serverStatus.wiredTiger.transaction.Number of prepared updates repeated on the same key",
        "serverStatus.wiredTiger.transaction.prepared transactions",
        "serverStatus.wiredTiger.transaction.prepared transactions committed",
        "serverStatus.wiredTiger.transaction.prepared transactions rolled back",
        "serverStatus.wiredTiger.transaction.prepared transactions rolled back and do not remove the history store entry",
        "serverStatus.wiredTiger.transaction.prepared transactions rolled back and fix the history store entry with checkpoint reserved transaction id",
        "serverStatus.wiredTiger.transaction.query timestamp calls",
        "serverStatus.wiredTiger.transaction.race to read prepared update retry",
        "serverStatus.wiredTiger.transaction.rollback to stable calls",
        "serverStatus.wiredTiger.transaction.rollback to stable inconsistent checkpoint",
        "serverStatus.wiredTiger.transaction.rollback to stable keys removed",
        "serverStatus.wiredTiger.transaction.rollback to stable keys restored",
        "serverStatus.wiredTiger.transaction.rollback to stable pages visited",
        "serverStatus.wiredTiger.transaction.rollback to stable restored tombstones from history store",
        "serverStatus.wiredTiger.transaction.rollback to stable restored updates from history store",
        "serverStatus.wiredTiger.transaction.rollback to stable skipping delete rle",
        "serverStatus.wiredTiger.transaction.rollback to stable skipping stable rle",
        "serverStatus.wiredTiger.transaction.rollback to stable sweeping history store keys",
        "serverStatus.wiredTiger.transaction.rollback to stable tree walk skipping pages",
        "serverStatus.wiredTiger.transaction.rollback to stable updates aborted",
        "serverStatus.wiredTiger.transaction.rollback to stable updates removed from history store",
        "serverStatus.wiredTiger.transaction.sessions scanned in each walk of concurrent sessions",
        "serverStatus.wiredTiger.transaction.set timestamp calls",
        "serverStatus.wiredTiger.transaction.set timestamp durable calls",
        "serverStatus.wiredTiger.transaction.set timestamp durable updates",
        "serverStatus.wiredTiger.transaction.set timestamp oldest calls",
        "serverStatus.wiredTiger.transaction.set timestamp oldest updates",
        "serverStatus.wiredTiger.transaction.set timestamp stable calls",
        "serverStatus.wiredTiger.transaction.set timestamp stable updates",
        "serverStatus.wiredTiger.transaction.transaction begins",
        "serverStatus.wiredTiger.transaction.transaction checkpoint currently running for history store file",
        "serverStatus.wiredTiger.transaction.transaction checkpoint generation",
        "serverStatus.wiredTiger.transaction.transaction checkpoint history store file duration (usecs)",
        "serverStatus.wiredTiger.transaction.transaction checkpoint most recent duration for gathering all handles (usecs)",
        "serverStatus.wiredTiger.transaction.transaction checkpoint most recent duration for gathering applied handles (usecs)",
        "serverStatus.wiredTiger.transaction.transaction checkpoint most recent duration for gathering skipped handles (usecs)",
        "serverStatus.wiredTiger.transaction.transaction checkpoint most recent handles applied",
        "serverStatus.wiredTiger.transaction.transaction checkpoint most recent handles skipped",
        "serverStatus.wiredTiger.transaction.transaction checkpoint most recent handles walked",
        "serverStatus.wiredTiger.transaction.transaction checkpoint most recent time (msecs)",
        "serverStatus.wiredTiger.transaction.transaction checkpoint prepare currently running",
        "serverStatus.wiredTiger.transaction.transaction checkpoint prepare max time (msecs)",
        "serverStatus.wiredTiger.transaction.transaction checkpoint prepare min time (msecs)",
        "serverStatus.wiredTiger.transaction.transaction checkpoint prepare most recent time (msecs)",
        "serverStatus.wiredTiger.transaction.transaction checkpoint prepare total time (msecs)",
        "serverStatus.wiredTiger.transaction.transaction checkpoint scrub dirty target",
        "serverStatus.wiredTiger.transaction.transaction checkpoint scrub time (msecs)",
        "serverStatus.wiredTiger.transaction.transaction checkpoints due to obsolete pages",
        "serverStatus.wiredTiger.transaction.transaction checkpoints skipped because database was clean",
        "serverStatus.wiredTiger.transaction.transaction fsync calls for checkpoint after allocating the transaction ID",
        "serverStatus.wiredTiger.transaction.transaction fsync duration for checkpoint after allocating the transaction ID (usecs)",
        "serverStatus.wiredTiger.transaction.transaction range of IDs currently pinned",
        "serverStatus.wiredTiger.transaction.transaction range of IDs currently pinned by a checkpoint",
        "serverStatus.wiredTiger.transaction.transaction range of timestamps currently pinned",
        "serverStatus.wiredTiger.transaction.transaction range of timestamps pinned by a checkpoint",
        "serverStatus.wiredTiger.transaction.transaction range of timestamps pinned by the oldest active read timestamp",
        "serverStatus.wiredTiger.transaction.transaction range of timestamps pinned by the oldest timestamp",
        "serverStatus.wiredTiger.transaction.transaction read timestamp of the oldest active reader",
        "serverStatus.wiredTiger.transaction.transaction rollback to stable currently running",
        "serverStatus.wiredTiger.transaction.transaction walk of concurrent sessions",
        "systemMetrics.netstat.*"
    ],
    "comments": {
        "asserts": "A document that reports on the number of assertions raised since the MongoDB process started. While assert errors are typically uncommon, if there are non-zero values for the asserts, you should check the log file for more information. In many cases, these errors are trivial, but are worth investigating.",
        "asserts.warning": "This field always returns zero 0. ",
        "exhaustAllowed": "The client is prepared for multiple replies to this request using the moreToCome bit. The server will never produce replies with the moreToCome bit set unless the request has this bit set.This ensures that multiple replies are only sent when the network layer of the requester is prepared for them.",
        "hello": "If the instance is a member of a replica set, then hello returns a subset of the replica set configuration and status including whether or not the instance is the primary of the replica set. When sent to a mongod instance that is not a member of a replica set,hello returns a subset of this information.",
        "isMaster": "If the instance is a member of a replica set, then isMaster returns a subset of the replica set configuration and status including whether or not the instance is the primary of the replica set.",
        "defaultRWConcern": "The defaultRWConcern section provides information on the local copy of the global default read or write concern settings.",
        "electionMetrics": "Have anything barely to do with ticket drop for a server configured correctly.",
        "extra_info.voluntary_context_switches": "represents the number of times the process voluntarily gave up the CPU before its time slice was completed. Accumulative",
        "extra_info.involuntary_context_switches": "represents the number of times the process voluntarily gave up the CPU before its time slice was completed. Accumulative",
        "flowControl.targetRateLimit": "This setting is the target number of operations per second that the system will attempt to maintain. By default, the target rate limit is automatically calculated by MongoDB based on system capacity. However, it can be manually set. Any changes to this value in the configuration would require a restart to take effect.",
        "flowControl.sustainerRate": "This is the number of operations per second that the sustainer thread will attempt to maintain. The sustainer thread is responsible for pacing operations to maintain the target rate limit. As with targetRateLimit, this value can be manually set in the configuration and changes would typically require a process restart.",
        "serverStatus.globalLock.totalTime": "The time, in microseconds, since the database last started and created the globalLock. This is roughly equivalent to total server uptime.",
        "serverStatus.hedgingMetrics": "Stats for shard only",
        "serverStatus.latchAnalysis": "Disabled by default, stats for only internal locking",
        "mirroredReads": "A document that reports on mirrored reads. Replica set me count kitne operations mirror hue, second parameter is operations*no_of_replicas",
        "network physical bytes in/out": "proportional to network bytes in/out only extra tcp/network metadata is extra",
        "network tcpFastOpen kernelSetting,serverSupported, clientSupport": "Fixed setup parameters, do not need to be monitored. If enabled, tcpFastOpen.accepted-numRequests can tell us that most clients do not support TFO",
        "serverStatus.network.compression.*": "Stats on snappy and zstd, can help measure effectiveness which should not be close to any reason to ticket drop",
        "serverStatus.scramCache.*": "Credential caching latency and all",
        "serverStatus.security.authentication.mechanisms*": "serverStatus.security.authentication.mechanisms.MONGODB-X509.*: These counters track the use of X.509 certificate-based authentication. They count the number of authentication attempts (\"received\"), and how many of those attempts were successful. They are accumulating fields.serverStatus.security.authentication.mechanisms.SCRAM-SHA-1.*: These counters track the use of SCRAM-SHA-1 authentication. They count the number of authentication attempts (\"received\"), and how many of those attempts were successful. They are accumulating fields. serverStatus.security.authentication.mechanisms.SCRAM-SHA-256.*: These counters track the use of SCRAM-SHA-256 authentication. They count the number of authentication attempts (\"received\"), and how many of those attempts were successful. They are accumulating fields.",
        "serverStatus.storageEngine.* except dropPendingIdents": "most of them are timestamps and booleans, only dropPendingIdents shows the number of identifiers waiting to be dropped by the storage engine. This could increase under high load or if there are issues with the storage system. ",
        "serverStatus.transportSecurity.*": "number of connections ts version wise",
        "serverStatus.twoPhaseCommitCoordinator": "Two-phase commits ensure data consistency across shards for sharded clusters.",
        "serverStatus.wiredTiger.cache.eviction walks *": "Eviction walk means the process of traversing the tree of pages in memory to find pages to evict. It offers more detail into the eviction process while looking at the first level is enough. So including, some eviction workers and excluding walks",
        "serverStatus.wiredTiger.cache.history*": "The purpose is to store stats about history table use, ref notes for hsitory table. Included a history store score in the metrics which denotes what is the contribution of history store in the cache. A high number would indicate more number of update operations",
        "in-memory page passed criteria to be split and in-memory page splits": "These metrics show how often in-memory pages are being evaluated for splitting and how often they are actually split. A page split can occur when the page size exceeds a certain threshold or the page has too many items.",
        "serverStatus.wiredTiger.cursor": "Kept only open and cached cursor count in wired tiger, rest all seemed irrelevant to th load, are basically count of each type of operations using cursors.",
        "serverStatus.wiredTiger.log.*": "Statistics on log records, will not affect much unless fights too much with I/O, contention for the log file should not be present, hence should not be a deciding factor",
        "serverStatus.metrics.operatorCounters.*": "These are operation/expression based Statistics.",
        "replSetGetStatus.*": "The repl opcountersRepl are included in serverStatus, also included in inProgressCount from serverStatus metrics",
        "local.oplog.rs.stats.wiredTiger.*": "The wiredTiger stats are covered in serverStatus.wiredTiger"
    }
}